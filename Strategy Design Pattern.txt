import java.util.*;

abstract class Vehicle
{
    DriveStrategy driveStrategy;
    
    Vehicle(DriveStrategy driveStrategy)
    {
        this.driveStrategy = driveStrategy;
    }
    
    void drive()
    {
        driveStrategy.drive();
    }
}

interface DriveStrategy
{
   void drive(); 
}

class NormalDriveStrategy implements DriveStrategy
{
    public void drive()
    {
        System.out.println("Normal Drive Strategy");
    }
}

class SportsDriveStrategy implements DriveStrategy
{
    public void drive()
    {
        System.out.println("Sports Drive Strategy");
    }
}

class SportsVehicle extends Vehicle
{
    SportsVehicle()
    {
        super(new SportsDriveStrategy());
    }
}

class GoodsVehicle extends Vehicle
{
    GoodsVehicle()
    {
        super(new NormalDriveStrategy());
    }
}


public class Solution
{
    public static void main(String[] args)
    {
        Vehicle vehicle = new SportsVehicle();
        vehicle.drive();
        
        Vehicle goodsVehicle = new GoodsVehicle();
        goodsVehicle.drive();
    }
}