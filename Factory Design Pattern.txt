import java.util.*;

// Factory Design pattern

interface Shape 
{
    void draw();
}

class Rectangle implements Shape 
{
    @Override
    public void draw()
    {
        System.out.println("Rectangle");
    }
}

class Circle implements Shape 
{
    @Override
    public void draw()
    {
        System.out.println("Circle");
    }
}

class ShapeFactory 
{
    Shape getShape(String input)
    {
        switch(input)
        {
            case "CIRCLE":
                return new Circle();
            case "RECTANGLE":
                return new Rectangle();
            default:
            return null;
        }
    }
}

public class Solution
{
    public static void main(String[] args)
    {
        ShapeFactory shape = new ShapeFactory();
        
        Shape rectangle = shape.getShape("RECTANGLE");
        rectangle.draw();
    }
}